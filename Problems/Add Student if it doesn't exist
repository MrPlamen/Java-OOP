import java.util.*;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        List<Student> students = new ArrayList<>();

        String line = sc.nextLine();

        while (!line.equals("end")) {

            String[] studentParams = line.split(" ");

            String firstNameTemp = studentParams[0];
            String secondNameTemp = studentParams[1];
            int ageTemp = Integer.parseInt(studentParams[2]);
            String cityTemp = studentParams[3];

            Student newStudent = new Student(firstNameTemp, secondNameTemp, ageTemp, cityTemp);

            addStudentIfNotExists(students, newStudent);

            line = sc.nextLine();
        }

        for (Student person :  students) {
            System.out.printf("%s %s, aged %d from %s%n", person.getFirstName(), person.getSecondName(),
                    person.getAge(), person.getCity());
        }

    }

    private static void addStudentIfNotExists(List<Student> studentList, Student student) {
        if (!studentList.contains(student)) {
            studentList.add(student);
        }
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////

public class Student {

    String firstName;
    String secondName;
    int age;
    String city;

    public Student(String firstName, String secondName, int age, String city) {
        this.firstName = firstName;
        this.secondName = secondName;
        this. age = age;
        this.city = city;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getSecondName() {
        return secondName;
    }

    public void setSecondName(String secondName) {
        this.secondName = secondName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Student student = (Student) o;
        return age == student.age && firstName.equals(student.firstName) && secondName.equals(student.secondName) && city.equals(student.city);
    }

    @Override
    public int hashCode() {
        return Objects.hash(firstName, secondName, age, city);
    }
}

/* You must override hashCode() in every class that overrides equals(). Failure to do so will result in a violation of the general contract for Object.hashCode(), 
which will prevent your class from functioning properly in conjunction with all hash-based collections, including HashMap, HashSet, and Hashtable. 
DONE WITH IntelliJ  ---->  Generate... ----> hashCode() and equals() */


